apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.services.celery.name }}
  labels:
    {{- include "celery.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "celery.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      {{- with .Values.services.celery.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        org.{{ .Chart.Name }}/network: {{ .Release.Name }}-{{ .Release.Namespace }}
        {{- include "celery.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - args:
            - celery-cmd
          command:
            - /usr/src/{{ .Values.configs.projectName }}/entrypoint.sh
          env:
            - name: IS_CELERY
              value: "true"
          envFrom:
            - configMapRef:
                name: {{ include "geonode.configmap" . }}
            - secretRef:
                name: {{ include "geonode.name" . }}-postgres
            {{- if .Values.configs.recaptcha.enabled }}
            - secretRef:
                name: {{ include "geonode.recaptcha-secret" . }}
            {{- end }}
            {{- if .Values.configs.ldap.enabled }}
            - secretRef:
                name: {{ include "geonode.ldap-secret" . }}
            {{- end }}
            {{- if .Values.services.memcached.enabled }}
            - secretRef:
                name: {{ include "geonode.memcached-secret" . }}
            {{- end }}
          {{- with .Values.services.celery.image }}
          image: {{ .repository }}:{{ .tag }}
          imagePullPolicy: {{ .pullPolicy }}
          {{- end }}
          name: {{ .Values.services.celery.name }}
          securityContext:
            {{- toYaml .Values.services.celery.securityContext | nindent 12 }}
          resources:
            {{- toYaml .Values.services.celery.resources | nindent 12 }}
          {{- with .Values.volumes }}
          volumeMounts:
            - mountPath: {{ .statics.mountPath }}
              name: statics
            - mountPath: {{ .geoserverData.mountPath }}
              name: geoserver-data-dir
            - mountPath: {{ .backupRestore.mountPath }}
              name: backup-restore
            - mountPath: {{ .data.mountPath }}
              name: data
            - mountPath: {{ .tmp.mountPath }}
              name: tmp
            {{- end }}
      initContainers:
        - name: wait-for-django
          image: docker.io/library/busybox:latest
          command: 
            - 'sh'
            - '-c' 
            - >
              until wget -T 5 --spider {{ include "django.internalPath" . }}
                do echo waiting for django...; sleep 2; 
              done
      serviceAccountName: {{ include "geonode.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.services.celery.podSecurityContext | nindent 8 }}
      restartPolicy: Always
      {{- with .Values.services.celery.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.services.celery.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.services.celery.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: statics
          persistentVolumeClaim:
            claimName: {{ include "geonode.statics-pvc" . }}
        - name: geoserver-data-dir
          persistentVolumeClaim:
            claimName: {{ include "geonode.geoserver-data-pvc" . }}
        - name: backup-restore
          persistentVolumeClaim:
            claimName: {{ include "geonode.backup-restore-pvc" . }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "geonode.data-pvc" . }}
        - name: tmp
          persistentVolumeClaim:
            claimName: {{ include "geonode.tmp-pvc" . }}
status: {}
