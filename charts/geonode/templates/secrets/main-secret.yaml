apiVersion: v1
kind: Secret
metadata:
  name: {{ include "geonode.main-secret" . }}
type: Opaque
stringData:
  {{- with .Values.configs }}
  # Django Secret Key
  SECRET_KEY: {{ ( required "A Secret Key is requrired: check https://docs.djangoproject.com/en/4.2/ref/settings/#secret-key" .django.secretKey ) | quote }}

  # Admin Settings
  #
  # ADMIN_PASSWORD is used to overwrite the GeoNode admin password **ONLY** the first time
  # GeoNode is run. If you need to overwrite it again, you need to set the env var FORCE_REINIT,
  # otherwise the invoke updateadmin task will be skipped and the current password already stored
  # in DB will honored.
  ADMIN_USERNAME: {{ .admin.user | toString | quote }}
  ADMIN_PASSWORD: {{ ( required "A password for GeoNode admin user is required!" .admin.password ) | toString | quote }}
  ADMIN_EMAIL: {{ .admin.email }}

  # Geoserver    
  GEOSERVER_ADMIN_USER: {{ (default .admin.user .geoserver.admin.user) | toString | quote }}
  GEOSERVER_ADMIN_PASSWORD: {{ (default .admin.password .geoserver.admin.password) | toString | quote }}
  
  # OAuth2 with GeoServer (geonode REST role service)
  OAUTH2_API_KEY: {{ ( required "Please provide a GeoNode OAUTH2 API Key - keep it safe" .oAuth2.apiKey ) | toString | quote }}

  # GeoNode OAuth Toolkit (Geonode login button on geoserver)
  OAUTH2_CLIENT_ID: {{ ( required "Please provide a oAuth2 Client ID" .oAuth2.clientId ) | toString | quote }}
  OAUTH2_CLIENT_SECRET: {{ ( required "Please provide a oAuth2 Secret - keep it safe" .oAuth2.secret ) | toString | quote }}

  # GeoNode APIs
  API_LOCKDOWN: {{ .tastyPie.apiLockDown | toString | title | quote }}
  TASTYPIE_APIKEY: {{ .tastyPie.apiKey }}

  # GIS Client
  MAPBOX_ACCESS_TOKEN: {{ .gisClient.apiKeys.mapbox }}
  BING_API_KEY: {{ .gisClient.apiKeys.bingMaps }}
  GOOGLE_API_KEY: {{ .gisClient.apiKeys.googleMaps }}
  {{- end  }}
