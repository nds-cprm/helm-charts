apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.services.rabbitmq.name }}
  labels:
    {{- include "rabbitmq.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "rabbitmq.selectorLabels" . | nindent 6 }}
  serviceName: {{ .Values.services.rabbitmq.name }}
  template:
    metadata:
      {{- with .Values.services.rabbitmq.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        io.kompose.network/geonode-default: "true"
        {{- include "rabbitmq.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - image: {{ .Values.services.rabbitmq.image.repository }}:{{ .Values.services.rabbitmq.image.tag | default "latest" }}
          imagePullPolicy: {{ .Values.services.rabbitmq.image.pullPolicy }}
          name: {{ .Values.services.rabbitmq.name }}
          envFrom:
            - configMapRef:
                name: {{ include "geonode.configmap" . }}
          securityContext:
            {{- toYaml .Values.services.rabbitmq.securityContext | nindent 12 }}
          ports:
            - name: amqp
              containerPort: 5672
              protocol: TCP
          resources:
            {{- toYaml .Values.services.rabbitmq.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /var/lib/rabbitmq
              name: rabbitmq-data
      serviceAccountName: {{ include "geonode.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.services.rabbitmq.podSecurityContext | nindent 8 }}
      restartPolicy: Always
      {{- with .Values.services.rabbitmq.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.services.rabbitmq.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.services.rabbitmq.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: rabbitmq-data
          persistentVolumeClaim:
            claimName: rabbitmq-data
  updateStrategy: {}
  volumeClaimTemplates:    
    - metadata:
        labels:
          {{- include "rabbitmq.labels" . | nindent 12 }}
        name: rabbitmq-data
      {{- with .Values.services.rabbitmq.volumes }}
      spec:
        accessModes:
          - ReadWriteOnce
        volumeMode: Filesystem
        {{- if .storageClassName }}
        storageClassName: {{ .storageClassName }}
        {{- end }}
        resources:
          requests:
            storage: {{ .storage }}
      {{- end }}
