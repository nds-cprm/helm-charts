apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "geoserver.fullname" . }}
  labels:
    {{- include "geoserver.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "geoserver.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "geoserver.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "geoserver.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        {{- if .Values.pvc.data.enabled }}
        - name: geoserver-data
          persistentVolumeClaim:
            claimName: {{ include "geoserver.fullname" . }}-data
        {{- end }}
        {{- if .Values.pvc.gwc.enabled }}
        - name: geoserver-gwc
          persistentVolumeClaim:
            claimName: {{ include "geoserver.fullname" . }}-gwc
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: tcp-{{ .Values.service.port }}
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          envFrom:
            - configMapRef:
                name: {{ include "geoserver.fullname" . }} 
          volumeMounts:
            {{- if .Values.pvc.data.enabled }}
            - mountPath: {{ .Values.pvc.data.storage.mountPath }}
              name: geoserver-data
            {{- end }}
            {{- if .Values.pvc.gwc.enabled }}
            - mountPath: {{ .Values.pvc.gwc.storage.mountPath }}
              name: geoserver-gwc
            {{- end }}
          livenessProbe:
            exec:
              command: 
                - curl 
                - "-fs" 
                - http://localhost:{{ .Values.service.port }}/geoserver            
            initialDelaySeconds: 60
            timeoutSeconds: 1
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
